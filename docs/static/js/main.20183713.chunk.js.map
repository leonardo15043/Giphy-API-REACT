{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GitGridItem.js","components/GifGrid.js","hooks/userFetchGifts.js","GitExpertapp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GitGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifts","GitExpertapp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA6BeA,MA1Bf,YAA2C,IAAnBC,EAAkB,EAAlBA,cAAkB,EAEAC,mBAAS,IAFT,mBAE9BC,EAF8B,KAElBC,EAFkB,KActC,OACI,uBAAMC,SAPW,SAACC,GAClBA,EAAEC,iBACFN,GAAe,SAAAO,GAAI,OAAOL,GAAP,mBAAsBK,OACzCJ,EAAc,KAId,UACI,gDACA,uBAAOK,KAAK,OAAOC,MAAQP,EAAaQ,SAbtB,SAACL,GACvBF,EAAeE,EAAEM,OAAOF,c,+BCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,gEAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDZ,SAAGA,GAAe,IAAD,EAEdZ,mBAAS,CACjCmB,KAAO,GACPa,SAAS,IAJ6B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAsB1C,OAfAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAGb,CAAEpB,IAEGqB,EDnBmBM,CAAe3B,GAAjCO,EAF6B,EAE7BA,KAAMa,EAFuB,EAEvBA,QAEd,OACI,eAAC,WAAD,WACA,mCAAOpB,EAAP,OACEoB,GAAW,0CACb,qBAAKJ,UAAU,YAAf,SAGYT,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAAkCA,GAAfA,EAAIC,aEahCiB,EAxBM,SAAAC,GAAU,IAAD,EAEUzC,mBAAS,CAAC,cAFpB,mBAEnB0C,EAFmB,KAEP3C,EAFO,KAQ1B,OACI,eAAC,WAAD,WACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEQ2C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,Y,MCfvC+B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.20183713.chunk.js","sourcesContent":["import React, { Fragment,useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction AddCategory( { setCategories } ) {\r\n\r\n    const [ inputValue, setInputValue ] = useState('')\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        setCategories( cats => [  inputValue, ...cats ] ); // agregamos nuevos elementos a nuestra lista \r\n        setInputValue(''); // refrescamos el input\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <h2>App Categories</h2>\r\n            <input type=\"text\" value={ inputValue } onChange={ handleInputChange } />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n} \r\n\r\nexport default AddCategory\r\n\r\n\r\n\r\n","export const getGifs = async( category ) =>{\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) } &limit=10&api_key=48Qzvn6bYuINFc6tnXrL0MfuU7Njc9zf`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id : img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GitGridItem = ( { id, title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useFetchGifts } from '../hooks/userFetchGifts';\r\nimport { GitGridItem } from './GitGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifts( category );\r\n\r\n    return ( \r\n        <Fragment>\r\n        <h3> { category } </h3>\r\n        { loading && <p> Loading </p>}\r\n        <div className=\"card-grid\">        \r\n            \r\n                {\r\n                    data.map( img =>(\r\n                        <GitGridItem key={ img.id }  { ...img } />\r\n                    ))\r\n                } \r\n            \r\n        </div>\r\n        </Fragment>\r\n\r\n    )\r\n\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifts = (  category  ) =>{\r\n\r\n    const [ state, setState ] = useState({\r\n        data : [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });                   \r\n                }, 3000 );\r\n\r\n            })\r\n    },[ category ])\r\n\r\n    return state;\r\n}","import React, { Fragment, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GitExpertapp = props => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    const handleAdd = () =>{\r\n        setCategories( [ 'HunterXHunter', ... categories ] )\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>GitExpertapp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <ol>\r\n                {\r\n                    categories.map( category =>(\r\n                        <GifGrid key={ category } category={ category }/>\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GitExpertapp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertapp from './GitExpertapp';\nimport './index.css';\n\nReactDOM.render(\n    <GitExpertapp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}